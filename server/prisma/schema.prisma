// Prisma schema for ZK Steam prototype

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(uuid())
  walletAddress String?  @unique
  steamId       String?  @unique
  createdAt     DateTime @default(now())
  proofs        Proof[]
}

model Game {
  id        String   @id @default(uuid())
  name      String
  slug      String   @unique
  createdAt DateTime @default(now())
  proofs    Proof[]
}

model Proof {
  id         String   @id @default(uuid())
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  game       Game?    @relation(fields: [gameId], references: [id])
  gameId     String?
  provider   String
  verified   Boolean  @default(false)
  proofJson  Json
  sessionId  String?  @unique // Prevent duplicate proofs
  claimedAt  DateTime @default(now())
  createdAt  DateTime @default(now())

  @@index([sessionId])
  @@index([userId])
}

model Category {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  items     Item[]
}

model Item {
  id                    Int              @id @default(autoincrement())
  title                 String           @db.VarChar(255)
  description           String?          @db.Text
  categoryId            Int?
  category              Category?        @relation(fields: [categoryId], references: [id])
  createdAt             DateTime         @default(now())
  recommendations       Recommendation[] @relation("ItemRecommendations")
  recommendedByItems    Recommendation[] @relation("RecommendedItems")
}

model Recommendation {
  id                  Int      @id @default(autoincrement())
  itemId              Int
  item                Item     @relation("ItemRecommendations", fields: [itemId], references: [id], onDelete: Cascade)
  recommendedItemId   Int
  recommendedItem     Item     @relation("RecommendedItems", fields: [recommendedItemId], references: [id], onDelete: Cascade)
  score               Decimal? @db.Decimal(4, 3)
  rank                Int      @default(0)
  createdAt           DateTime @default(now())

  @@unique([itemId, recommendedItemId])
  @@index([itemId])
  @@index([score(sort: Desc)])
}

